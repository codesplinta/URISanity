{"version":3,"file":"urisanity.min.js","sources":["../src/index.js"],"sourcesContent":["/** !\n * @author: https://twitter.com/isocroft\n * @owner: https://twitter.com/codesplinta\n *\n * @Copyright (c) 2021\n *\n * @sourced: [first-party] https://github.com/braintree/sanitize-url\n *\n * Based on the well known URI schemes;\n * See: https://en.wikipedia.org/wiki/List_of_URI_schemes\n *\n * @created: 23/06/2021\n * @last-updated: 12/02/2022\n */\n\n/* eslint-disable no-useless-escape */\n\n/* @HINT: all URI schemes that are mostly unsafe for web browsers to launch */\nconst unsafeURISchemeRegex =\n  /^([^\\w]*)(javascript|vbscript|app|admin|icloud-sharing|icloud-vetting|file|help|facetime-audio|applefeedback|ibooks|macappstore|udoc|ts|st|x-apple-helpbasic|(?:x\\-)?radar)/im\n/* @HINT: all URI schemes that are mostly safe for web browsers to launch */\nconst safeInternetURISchemeRegex =\n  /^(?:(?:f|ht)tps?|cid|xmpp|mms|webcal|aaa|acap|bolo|data|blob|wss?|irc|udp)/im\n/* @CHECK: https://gist.github.com/gruber/249502/61cbb59f099fdf90316c4e409c7523b6d5124f80 */\nconst safeURIRegex =\n  /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/?)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)){0,}(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s\\!()\\[\\]{};:\\'\\\"\\.\\,<>?«»“”‘’]){0,})/i\n/* @HINT: */\nconst commsAppURISchemeRegex =\n  /^(whatsapp|zoommtg|slack|mailto|tel|callto|sms|skype)/im\nconst databaseConnectionStringURISchemeRegex =\n  /^(jdbc(:sqlserver|:mysql|:mariadb|:sqlite)?|odbc|postgres(ql)?|mongodb)/im\nconst browserURISchemeRegex = /^(view-source|moz-extension|chrome-extension)/im\nconst serviceAPIURISchemeRegex = /^(cloudinary|gs|s3|grpc)/im\n/* @HINT: */\nconst ctrlCharactersRegex =\n  /[\\u0000-\\u001F\\u007F-\\u009F\\u2000-\\u200D\\uFEFF]/gim; /* eslint-disable-line */\n// const urlSchemeRegex = /^([^:]+):/gm\n/* @CHECK: https://datatracker.ietf.org/doc/html/rfc2397 - DATA URI */\n/* @CHECK: https://www.w3.org/TR/FileAPI/#blob-url - BLOB URL */\nconst dataURIRegex =\n  /^(?:data:([\\w-.]+\\/[\\w-.]+(\\+[\\w-.]+)?)?(;[\\w-.]+=[\\w-.]+)*;base64,([a-zA-Z0-9\\/+\\n=]+))$/\nconst scriptURIRegex = /^(?:vb|java)script:/i\nconst webTransportURIRegex = /^(?:(blob:)?https?|wss?|about)/im\nconst relativeFirstCharacters = ['.', '/']\n\n/* @HINT: Global Stub for the Browser, ReactNative, NativeScript, NodeJS */\nconst $globals = self || global || {}\n/* @HINT: Conditionally access the NodeJS process global */\nconst nodeJSProcess = $globals.process || { versions: { node: '.' }, env: {} }\nconst NODE_MAJOR_VERSION = parseInt(nodeJSProcess.versions.node.split('.')[0])\n\n/* @CHECK: https://developer.mozilla.org/en-US/docs/Web/API/URL#browser_compatibility */\nif (NODE_MAJOR_VERSION <= 12) {\n  if (!$globals.URL) {\n    $globals.URL = function (urlString) {\n      const urlParser = require('url')\n      /* urlParser.parse(): deprecarted in NodeJS v11.x */\n      const parsedUrl =\n        NODE_MAJOR_VERSION <= 11\n          ? urlParser.parse(urlString) /* eslint-disable-line */\n          : urlParser.URL(urlString)\n      return Object.assign({}, parsedUrl, { hostname: parsedUrl.host })\n    }\n  }\n}\n\nfunction isStandardBrowserEnv () {\n  const environ = $globals.navigator\n  return (\n    typeof environ !== 'undefined' &&\n    environ.product.match(/^(ReactNative|NativeScript|NS)$/i) === null\n  )\n}\n\nconst origin = isStandardBrowserEnv()\n  ? $globals.location.origin\n  : ($globals.constants || nodeJSProcess.env).ORIGIN\n\nfunction isRelativeUrlWithoutProtocol (url) {\n  if (typeof url === 'string') {\n    return relativeFirstCharacters.indexOf(url.charAt(0)) > -1\n  }\n  return false\n}\n\n/* @CHECK: https://gist.github.com/blafrance/4053759 */\nfunction extractParamValueFromUri (uri, paramName) {\n  if (!uri) {\n    return\n  }\n\n  const regex = new RegExp('[\\\\?&#]' + paramName + '=([^&#]*)')\n  const params = regex.exec(uri)\n  if (params != null) {\n    return unescape(params[1])\n  }\n}\n\nfunction formDataToJSON (elem) {\n  let current, item, key, output, value\n  output = {}\n\n  const entries =\n    elem instanceof $globals.FormData\n      ? elem.entries()\n      : new $globals.FormData(elem).entries()\n\n  try {\n    // Iterate over values, and assign to item.\n    while ((item = entries.next().value) !== null) {\n      // assign to variables to make the code more readable.\n      key = item[0]\n      value = item[1]\n      // Check if key already exist\n      if (Object.prototype.hasOwnProperty.call(output, key)) {\n        current = output[key]\n        if (!Array.isArray(current)) {\n          // If it's not an array, convert it to an array.\n          current = output[key] = [current]\n        }\n        current.push(value) // Add the new value to the array.\n      } else {\n        output[key] = value\n      }\n    }\n  } catch (_) {\n    output = Object.fromEntries(entries)\n  }\n\n  return JSON.stringify(output)\n}\n\nfunction isSameOrigin (uri) {\n  if (!uri) {\n    return\n  }\n\n  const parsedUrl = new $globals.URL(uri)\n  return origin === parsedUrl.origin\n}\n\nfunction checkParamsOverWhiteList (uri, paramsWhiteList = [], data = '') {\n  const parsedUrl = new $globals.URL(uri)\n  const paramKeys = []\n  const paramValues = []\n  let preparedData = null\n\n  try {\n    let json = ''\n    if ('FormData' in $globals && data instanceof $globals.FormData) {\n      if (typeof Object.fromEntries === 'function') {\n        json = formDataToJSON(data)\n      } else {\n        const object = {}\n\n        data.forEach(function (value, key) {\n          object[key] = value\n        })\n\n        json = JSON.stringify(object)\n      }\n    } else {\n      json = data\n    }\n\n    if (typeof json === 'string') {\n      preparedData = JSON.parse(json)\n    }\n  } catch (_) {\n    preparedData = data\n  }\n\n  if (preparedData === '') {\n    parsedUrl.searchParams.forEach(function (...args) {\n      const [value, key] = args\n\n      paramValues.push(unescape(value))\n      paramKeys.push(key)\n    })\n  } else {\n    if (preparedData instanceof Object) {\n      paramValues.concat(Object.values(preparedData))\n      paramKeys.concat(Object.keys(preparedData))\n    }\n  }\n\n  /* @HINT: Check that only the request params we need are attached */\n  /* @HINT: Any other extra params should not be allowed */\n  if (paramKeys.length === paramsWhiteList.length) {\n    return true\n  }\n\n  return false\n}\n\nfunction sanitizeUrl (url, options = {}) {\n  if (\n    !url ||\n    url.match(/:\\/\\/(?:[#$@=*.!]|[/]){0,}$/) !== null ||\n    url.includes('////////////')\n  ) {\n    return 'about:blank'\n  }\n\n  let sanitizedUrl = url.replace(ctrlCharactersRegex, '').trim()\n\n  if (isRelativeUrlWithoutProtocol(sanitizedUrl)) {\n    const originalSanitized = sanitizedUrl.startsWith('/')\n      ? origin + sanitizedUrl\n      : origin + '/' + sanitizedUrl\n    sanitizedUrl = safeURIRegex.test(originalSanitized)\n      ? originalSanitized\n      : '//'\n  }\n\n  let urlSchemeParseResults =\n    sanitizedUrl.match(safeInternetURISchemeRegex) ||\n    sanitizedUrl.match(commsAppURISchemeRegex) ||\n    sanitizedUrl.match(databaseConnectionStringURISchemeRegex) ||\n    sanitizedUrl.match(browserURISchemeRegex)\n\n  urlSchemeParseResults =\n    urlSchemeParseResults !== null ? urlSchemeParseResults : []\n  const urlScheme = urlSchemeParseResults[0] || ''\n\n  const { hostname, pathname, search, hash } = new $globals.URL(\n    sanitizedUrl.toLowerCase()\n  )\n\n  /* @CHECK: https://en.wikipedia.org/wiki/Hostname#Restrictions_on_valid_host_names */\n  /* CHECK: https://datatracker.ietf.org/doc/html/rfc3986 */\n  if (\n    /^(?:((?:www|[a-z]{1,11})\\.)(?!\\1)(?:[a-z\\-\\d]{1,63})\\.(?:[a-z.\\-\\d]{2,63}))$/i.test(\n      hostname\n    ) ||\n    /^(((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/.test(\n      hostname\n    ) ||\n    /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/.test(\n      hostname\n    ) ||\n    /^(?:((?:[a-z0-9-._~]{0,}|%[1-9a-f]?[0-9a-f]|[!$&'()*+,;=])|\\:|\\@)*)/i.test(\n      pathname\n    ) ||\n    /^((?:[a-z0-9-._~]{0,}|%[1-9a-f]?[0-9a-f]|[!$&'()*+,;=])|\\:|\\@|\\/|\\?)*$/i.test(\n      search\n    ) ||\n    /^((?:[a-z0-9-._~]{0,}|%[1-9a-f]?[0-9a-f]|[!$&'()*+,;=])|\\:|\\@|\\/|\\?)*$/i.test(\n      hash\n    )\n  ) {\n    if (hostname.includes('.00')) {\n      return 'about:blank'\n    }\n\n    if (\n      search.toLowerCase().match(/%3c(?=\\/)?/) !== null &&\n      search.toLowerCase().includes('%3e') &&\n      search.toLowerCase().includes('%3f') &&\n      search.toLowerCase().includes('%3d') &&\n      search.toLowerCase().includes('%27') &&\n      search.toLowerCase().includes('%22')\n    ) {\n      return 'about:blank'\n    }\n  }\n\n  if (\n    !unsafeURISchemeRegex.test(urlScheme) ||\n    safeURIRegex.test(sanitizedUrl)\n  ) {\n    let pass = false\n\n    if (\n      options.allowScriptOrDataURI &&\n      urlScheme.match(/^(java|vb)script|data/) === null &&\n      (dataURIRegex.test(sanitizedUrl) || scriptURIRegex.test(sanitizedUrl))\n    ) {\n      pass = true\n    }\n\n    if (options.allowCommsAppURI && commsAppURISchemeRegex.test(sanitizedUrl)) {\n      pass = true\n    }\n\n    if (\n      options.allowDBConnectionStringURI &&\n      databaseConnectionStringURISchemeRegex.test(sanitizedUrl)\n    ) {\n      pass = true\n    }\n\n    if (\n      options.allowServiceAPIURI &&\n      serviceAPIURISchemeRegex.test(sanitizedUrl)\n    ) {\n      pass = true\n    }\n\n    if (\n      options.allowBrowserSpecificURI &&\n      browserURISchemeRegex.test(sanitizedUrl)\n    ) {\n      pass = true\n    }\n\n    if (\n      options.allowWebTransportURI &&\n      webTransportURIRegex.test(sanitizedUrl)\n    ) {\n      pass = true\n    }\n\n    if (urlScheme !== '' && pass) {\n      return sanitizedUrl\n    } else {\n      return 'about:blank' // sanitizedUrl;\n    }\n  }\n}\n\nconst URISanity = {\n  isSameOrigin,\n  extractParamValueFromUri,\n  checkParamsOverWhiteList,\n  vet (url, options = {}) {\n    return sanitizeUrl(url, options || {})\n  }\n}\n\nexport default URISanity\n"],"names":["unsafeURISchemeRegex","safeInternetURISchemeRegex","safeURIRegex","commsAppURISchemeRegex","databaseConnectionStringURISchemeRegex","browserURISchemeRegex","serviceAPIURISchemeRegex","ctrlCharactersRegex","dataURIRegex","scriptURIRegex","webTransportURIRegex","relativeFirstCharacters","$globals","self","global","nodeJSProcess","process","versions","node","env","NODE_MAJOR_VERSION","parseInt","split","URL","urlString","urlParser","require","parsedUrl","parse","Object","assign","hostname","host","environ","origin","navigator","product","match","location","constants","ORIGIN","isRelativeUrlWithoutProtocol","url","indexOf","charAt","formDataToJSON","elem","current","item","key","output","value","entries","FormData","next","prototype","hasOwnProperty","call","Array","isArray","push","_","fromEntries","JSON","stringify","sanitizeUrl","options","includes","sanitizedUrl","replace","trim","originalSanitized","startsWith","test","urlSchemeParseResults","urlScheme","toLowerCase","pathname","search","hash","pass","allowScriptOrDataURI","allowCommsAppURI","allowDBConnectionStringURI","allowServiceAPIURI","allowBrowserSpecificURI","allowWebTransportURI","URISanity","uri","paramName","params","RegExp","exec","unescape","paramsWhiteList","data","paramKeys","paramValues","preparedData","json","object","forEach","searchParams","args","concat","values","length"],"mappings":"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"}